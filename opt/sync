#!/usr/bin/env bash

world_name="${WORLD_NAME:-default}"

if [ -n "$AWS_BUCKET" ]; then
  cat << EOF > .s3cfg
[default]
access_key = ${AWS_ACCESS_KEY}
secret_key = ${AWS_SECRET_KEY}
EOF
  # note: this won't work if level-name is set in server.properties
  # todo: dynamically determine world/ dir
  if [ -d world ]; then
    s3cmd sync world/ s3://${AWS_BUCKET}/${WORLD_NAME}/world/
  else
    mkdir -p world
    cd world
    s3cmd get --recursive s3://${AWS_BUCKET}/${WORLD_NAME}/world/
    cd ..
  fi
  rm .s3cfg
fi

if [ -n "$FTP_HOST" ]; then
  # note: this won't work if level-name is set in server.properties
  # todo: dynamically determine world/ dir
  echo "$FTP_USERNAME:$FTP_PASSWORD" | keyring set pyftpsync ${FTP_HOST}
  if [ -d world ]; then
    pyftpsync sync world/ ftp://${FTP_HOST}/cloud/minecraft/world
  else
    mkdir -p world
    cd world
    pyftpsync download . ftp://${FTP_HOST}/cloud/minecraft/world --force --delete --resolve=remote
    cd ..
    mkdir -p plugins
    cd plugins
    pyftpsync download . ftp://${FTP_HOST}/cloud/minecraft/plugins --force --delete --resolve=remote
    cd ..
  fi
fi
